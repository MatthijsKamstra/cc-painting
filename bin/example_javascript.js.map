{
"version":3,
"file":"example_javascript.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/workingdir_haxe/cc-painting/src/Main.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["package;\n\nimport js.Browser.*;\nimport js.Browser;\nimport js.html.*;\nimport model.constants.App;\n\n/**\n * @author Matthijs Kamstra aka [mck]\n * MIT\n */\nclass Main {\n\tvar container:js.html.DivElement;\n\n\tpublic function new() {\n\t\ttrace(\"Hello 'Example Javascript'\");\n\t}\n\n\tfunction init() {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t\t\tconsole.log('${App.NAME} Dom ready :: build: ${App.getBuildDate()} ');\n\n\t\t\t// var container = document.getElementById(\"prop\");\n\t\t\t// container.innerHTML = 'html';\n\n\t\t\tinitHTML();\n\t\t\tloadData();\n\t\t});\n\t}\n\n\tfunction initHTML() {\n\t\tcontainer = document.createDivElement();\n\t\tcontainer.id = \"example_javascript\";\n\t\tcontainer.className = \"container\";\n\t\tdocument.body.appendChild(container);\n\n\t\tvar h1 = document.createElement('h1');\n\t\th1.innerText = \"Example Javascript\";\n\t\tcontainer.appendChild(h1);\n\t}\n\n\tfunction loadData() {\n\t\tvar url = 'http://ip.jsontest.com/';\n\t\tvar req = new haxe.Http(url);\n\t\t// req.setHeader('Content-Type', 'application/json');\n\t\t// req.setHeader('auth', '${App.TOKEN}');\n\t\treq.onData = function(data:String) {\n\t\t\ttry {\n\t\t\t\tvar json = haxe.Json.parse(data);\n\t\t\t\ttrace(json);\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\ttrace(e);\n\t\t\t}\n\t\t}\n\t\treq.onError = function(error:String) {\n\t\t\ttrace('error: $error');\n\t\t}\n\t\treq.onStatus = function(status:Int) {\n\t\t\ttrace('status: $status');\n\t\t}\n\t\treq.request(true); // false=GET, true=POST\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new Main();\n\t}\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":";;WAcC,WACC;AAAA,+BAAM;AAAN;YAgDD,WACC;AAAA,WAAU;AAAV;mCC9BO,gBAPT;AAAA,CAEmB,AAAlB,eAAkB;AAFnB,CASE,aAAa;AATf;;UAeS,WAEP;AAAA,SAAO,eAAU;AAAjB;QAMO,WAEP;AAAA,SAAO,WAAM;AAAb;;;;;"
}